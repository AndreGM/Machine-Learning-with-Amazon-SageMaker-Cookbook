#!/usr/bin/Rscript

library("rjson")
library("forecast")

prepare_paths <- function() {
    keys <- c('hyperparameters', 
              'input', 
              'data',
              'model')

    values <- c('input/config/hyperparameters.json', 
                'input/config/inputdataconfig.json', 
                'input/data/',
                'model/')
    
    paths <- as.list(values)
    names(paths) <- keys
    
    return(paths);
}

PATHS <- prepare_paths()

get_path <- function(key) {
    output <- paste('/opt/ml/', PATHS[[key]], sep="")
    
    return(output);
}

load_json <- function(target_file) {
    result <- fromJSON(file = target_file)
}


print_json <- function(target_json) {
    print(target_json)
}

inspect_hyperparameters <- function() {
    hyperparameters_json_path <- get_path('hyperparameters')
    print(hyperparameters_json_path)
    
    hyperparameters <- load_json(hyperparameters_json_path)
    print(hyperparameters)
}


list_dir_contents <- function(target_path) {
    print(list.files(target_path))
}

inspect_input <- function() {
    input_config_json_path <- get_path('input')
    print(input_config_json_path)
    
    input_config <- load_json(input_config_json_path)
    print_json(input_config)
    
    for (key in names(input_config)) {
        print(key)
        
        input_data_dir <- paste(get_path('data'), key, '/', sep="")
        print(input_data_dir)
        list_dir_contents(input_data_dir)
    }
}


load_training_data <- function(input_data_dir) {
    print('[load_training_data]')
    
    files <- list_dir_contents(input_data_dir)
    training_data_path <- paste0(input_data_dir, files[[1]])
    print(training_data_path)
    
    loaded <- fromJSON(file=training_data_path)
    training_data.ts <- ts(loaded$data, start=loaded$start,frequency=loaded$frequency)
    
    return(training_data.ts)
}


get_input_data_dir <- function() {
    print('[get_input_data_dir]')
    key <- 'train'
    input_data_dir <- paste0(get_path('data'), key, '/')
    
    return(input_data_dir)
}


train_model <- function(data) {
    model <- snaive(data) 
    
    print(summary(model))

    return(model)
}


save_model <- function(model) {
    print('[save_model]')
    filename <- paste0(get_path('model'), 'model')
    print(filename)
    
    saveRDS(model, file=filename)
    
    print('Model Saved!')
}


main <- function() {
    input_data_dir = get_input_data_dir()
    print(input_data_dir)
    data.ts <- load_training_data(input_data_dir)
    print(data.ts)
    model <- train_model(data.ts)
    save_model(model)
}


main()
